{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","goods","length","className","map","good","id","style","color","name","getAll","fetch","then","response","json","getAllSortedByColor","sort","firstGood","secondGood","localeCompare","get5First","slice","getRedGoods","filter","App","useState","selectedGoods","setSelectedGoods","hasLoadingError","setHasLoadingError","loadGoods","callback","a","type","onClick","goodsAPI","ReactDOM","render","document","getElementById"],"mappings":"6OAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OAAOA,EAAMC,OAAS,EAElB,wBAAOC,UAAU,uBAAjB,UACE,gCACE,+BACE,mCACA,2CAGJ,gCACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,+BACE,6BAAKA,EAAKC,KACV,oBACE,UAAQ,OACRC,MAAO,CAAEC,MAAOH,EAAKG,OAFvB,SAIGH,EAAKI,SANDJ,EAAKC,YAapB,oBAAIH,UAAU,0BAAd,gC,YC3BC,SAASO,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,IAAMC,EAAsB,WACjC,OAAOL,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMe,MACnB,SAACC,EAAWC,GAAZ,OAA2BD,EAAUT,MAClCW,cAAcD,EAAWV,cAIrBY,EAAY,WACvB,OAAOV,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMe,MACnB,SAACC,EAAWC,GAAZ,OAA2BD,EAAUR,KAClCU,cAAcD,EAAWT,YAE7BG,MAAK,SAAAX,GAAK,OAAIA,EAAMoB,MAAM,EAAG,OAGrBC,EAAc,WACzB,OAAOZ,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMsB,QACnB,SAAAlB,GAAI,MAAmB,QAAfA,EAAKG,aCpBNgB,EAAgB,WAC3B,MAA0CC,mBAAiB,IAA3D,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAA8CF,oBAAS,GAAvD,mBAAOG,EAAP,KAAwBC,EAAxB,KAEMC,EAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAChBH,GAAmB,GADH,kBAIME,IAJN,OAIR9B,EAJQ,OAMd0B,EAAiB1B,GANH,gDAQd4B,GAAmB,GARL,yDAAH,sDAYf,OACE,qBAAK1B,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,mCAEA,wBACE8B,KAAK,SACL9B,UAAU,uBACV,UAAQ,aACR+B,QAAS,kBAAMJ,EAAUK,IAJ3B,4BASA,wBACEF,KAAK,SACL9B,UAAU,uBACV,UAAQ,gBACR+B,QAAS,kBAAMJ,EAAUK,IAJ3B,sCASA,wBACEF,KAAK,SACL9B,UAAU,uBACV,UAAQ,oBACR+B,QAAS,kBAAMJ,EAAUK,IAJ3B,gCASA,wBACEF,KAAK,SACL9B,UAAU,uBACV,UAAQ,aACR+B,QAAS,kBAAMJ,EAAUK,IAJ3B,4BASA,wBACEF,KAAK,SACL9B,UAAU,uBACV,UAAQ,cACR+B,QAAS,kBAAMP,EAAiB,KAJlC,yBASEC,GACA,cAAC,EAAD,CAAW3B,MAAOyB,UC1E5BU,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.93d2bb08.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => {\n  return goods.length > 0\n    ? (\n      <table className=\"table mt-5 is-narrow\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Good</th>\n          </tr>\n        </thead>\n        <tbody>\n          {goods.map(good => (\n            <tr key={good.id}>\n              <td>{good.id}</td>\n              <td\n                data-cy=\"good\"\n                style={{ color: good.color }}\n              >\n                {good.name}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    ) : (\n      <h2 className=\"subtitle is-size-4 mt-5\">\n        No goods selected\n      </h2>\n    );\n};\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const getAllSortedByColor = () => {\n  return getAll()\n    .then(goods => goods.sort(\n      (firstGood, secondGood) => firstGood.color\n        .localeCompare(secondGood.color),\n    ));\n};\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort(\n      (firstGood, secondGood) => firstGood.name\n        .localeCompare(secondGood.name),\n    ))\n    .then(goods => goods.slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(\n      good => good.color === 'red',\n    ));\n};\n","import React, { useState } from 'react';\nimport { GoodsList } from './GoodsList';\n\nimport { Good } from './types/Good';\n\nimport 'bulma';\nimport './App.scss';\n\nimport * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [selectedGoods, setSelectedGoods] = useState<Good[]>([]);\n  const [hasLoadingError, setHasLoadingError] = useState(false);\n\n  const loadGoods = async (callback:() => Promise<Good[]>) => {\n    setHasLoadingError(false);\n\n    try {\n      const goods = await callback();\n\n      setSelectedGoods(goods);\n    } catch (error) {\n      setHasLoadingError(true);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Dynamic list of Goods</h1>\n\n        <button\n          type=\"button\"\n          className=\"button is-responsive\"\n          data-cy=\"all-button\"\n          onClick={() => loadGoods(goodsAPI.getAll)}\n        >\n          Load all goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-responsive\"\n          data-cy=\"sorted-button\"\n          onClick={() => loadGoods(goodsAPI.getAllSortedByColor)}\n        >\n          Load all sorted by color\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-responsive\"\n          data-cy=\"first-five-button\"\n          onClick={() => loadGoods(goodsAPI.get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-responsive\"\n          data-cy=\"red-button\"\n          onClick={() => loadGoods(goodsAPI.getRedGoods)}\n        >\n          Load red goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"button is-responsive\"\n          data-cy=\"hide-button\"\n          onClick={() => setSelectedGoods([])}\n        >\n          Hide goods\n        </button>\n\n        {!hasLoadingError && (\n          <GoodsList goods={selectedGoods} />\n        )}\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}